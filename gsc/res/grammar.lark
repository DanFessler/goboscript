start: declr*

declr: "costumes" _stringlist ";" -> declr_costumes
     | "use" STRING ";" -> declr_use
     | "globals" _namelist ";" -> declr_globals
     | "listglobals" _namelist ";" -> declr_listglobals
     | "def" NAME _namelist stack -> declr_function
     | "nowarp" "def" NAME _namelist stack -> declr_function_nowarp
     | "on" STRING stack -> declr_on
     | "onflag" stack -> declr_onflag
     | "onkey" STRING stack -> declr_onkey
     | "onclick" stack -> declr_onclick
     | "onbackdrop" STRING stack -> declr_onbackdrop
     | "onloudness" expr stack -> declr_onloudness
     | "ontimer" expr stack -> declr_ontimer
     | "onclone" stack -> declr_onclone
     | "macro" NAME _namelist "->" expr ";" -> declr_macro
     | LCOMMENT -> declr_comment

stack: "{" block* "}"

block: NAME "=" expr ";" -> varset
     | NAME "+=" expr ";" -> varchange
     | NAME "-=" expr ";" -> varsub
     | NAME "*=" expr ";" -> varmul
     | "if" expr stack -> block_if
     | "if" expr stack "else" stack -> block_if_else
     | "if" expr stack ("elif" expr stack)+ -> block_if_elif
     | "if" expr stack ("elif" expr stack)+ "else" stack -> block_if_elif_else
     | "until" expr stack -> until
     | "forever" stack -> forever
     | "repeat" expr stack -> repeat
     | NAME "[" "]" ";" -> listset
     | NAME ".add" expr ";" -> listadd
     | NAME ".delete" expr ";" -> listdelete
     | NAME ".insert" expr "," expr ";" -> listinsert
     | NAME "[" expr "]" "=" expr ";" -> listreplace
     | NAME ".show" ";" -> listshow
     | NAME ".hide" ";" -> listhide
     | "..." -> nop
     | NAME _exprlist ";" [LCOMMENT]

expr: "(" expr ")"
    | STRING | NUMBER | FLOAT
    | NAME -> var
    | ARGUMENT -> argument
    | MACROVAR -> macrovar
    | NAME "(" _exprlist ")" -> reporter
    | MACROVAR "(" _exprlist ")" -> macro
    | "not" expr -> notop
    | expr "and" expr -> andop
    | expr "or" expr -> orop
    | expr "=" expr -> eq
    | expr ">" expr -> gt
    | expr "<" expr -> lt
    | expr "+" expr -> add
    | expr "-" expr -> sub
    | expr "*" expr -> mul
    | expr "/" expr -> div
    | expr "%" expr -> mod
    | expr "&" expr -> join
    | "-" expr -> minus
    | NAME "[" expr "]" -> listitem
    | NAME ".index" "(" expr ")" -> listindex
    | NAME ".contains" "(" expr ")" -> listcontains
    | NAME ".length" -> listlength

_exprlist: [expr ("," expr)*]
_stringlist: [STRING ("," STRING)*]
_namelist: [NAME ("," NAME)*]

MACROVAR: /\![_a-zA-Z][_a-zA-Z0-9]*/
ARGUMENT: /\$[_a-zA-Z][_a-zA-Z0-9]*/
NAME: /[_a-zA-Z][_a-zA-Z0-9]*/
STRING: /"([^"\\]|\\.)*"/
NUMBER: /-?[0-9]+/
FLOAT: /-?[0-9]+\.[0-9]+/

COMMENT: "/*" /.+/ "*/"
LCOMMENT: "(*" /.+/ "*)"
%ignore COMMENT
%ignore " "
%ignore "\n"
%ignore "\t"
